const canvas = document.getElementById("game");
const ctx = canvas.getContext("2d");

let player = { lane: 1, y: 300, width: 40, height: 40 };
let coins = [];
let obstacles = [];
let score = 0;
let gameSpeed = 5;
let lanes = [150, 280, 410];
let gameOver = false;

// Load music
const bgMusic = new Audio("music.mp3");
bgMusic.loop = true;
bgMusic.volume = 0.4;
bgMusic.play();

// Spawn coins and obstacles
function spawnItems() {
  const lane = Math.floor(Math.random() * 3);
  if (Math.random() > 0.5) {
    coins.push({ x: 600, y: lanes[lane], width: 20, height: 20 });
  } else {
    obstacles.push({ x: 600, y: lanes[lane], width: 30, height: 30 });
  }
}

function update() {
  if (gameOver) return;

  // Move items
  coins.forEach(c => c.x -= gameSpeed);
  coins = coins.filter(c => c.x + c.width > 0);

  obstacles.forEach(o => o.x -= gameSpeed);
  obstacles = obstacles.filter(o => o.x + o.width > 0);

  // Collision
  coins.forEach((c, i) => {
    if (Math.abs(c.x - 100) < 30 && c.y === lanes[player.lane]) {
      score += 10;
      coins.splice(i, 1);
    }
  });

  obstacles.forEach(o => {
    if (Math.abs(o.x - 100) < 30 && o.y === lanes[player.lane]) {
      gameOver = true;
    }
  });
}

function draw() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  // Player
  ctx.fillStyle = "#00ffcc";
  ctx.fillRect(100, lanes[player.lane], player.width, player.height);

  // Coins
  ctx.fillStyle = "gold";
  coins.forEach(c => ctx.fillRect(c.x, c.y, c.width, c.height));

  // Obstacles
  ctx.fillStyle = "red";
  obstacles.forEach(o => ctx.fillRect(o.x, o.y, o.width, o.height));

  // Score
  ctx.fillStyle = "white";
  ctx.font = "20px Arial";
  ctx.fillText("Score: " + score, 10, 30);

  // Game Over
  if (gameOver) {
    ctx.fillStyle = "yellow";
    ctx.font = "40px Arial";
    ctx.fillText("Game Over!", 180, 200);
  }
}

function gameLoop() {
  update();
  draw();
  if (!gameOver) requestAnimationFrame(gameLoop);
}

setInterval(spawnItems, 1500);
gameLoop();

// Touch handling for iPad
let startX = 0;
canvas.addEventListener("touchstart", e => startX = e.touches[0].clientX);
canvas.addEventListener("touchend", e => {
  const endX = e.changedTouches[0].clientX;
  if (endX - startX > 50 && player.lane > 0) {
    player.lane--;
  } else if (startX - endX > 50 && player.lane < 2) {
    player.lane++;
  }
});
